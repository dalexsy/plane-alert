$new-plane-color: #ff6161;
$followed-plane-color: #00ffff;

.plane-marker-container {
  width: 3rem;
  height: 3rem;
  display: flex;
  align-items: center;
  justify-content: center;
  pointer-events: none; // Let the .plane-marker handle pointer events

  // Override for grounded planes
  &.grounded-plane-container {
    // Add a specific class for the container
    width: 2rem;
    height: 2rem;
  }
}

.leaflet-marker-icon .plane-marker {
  pointer-events: auto; /* Ensure the marker can be clicked/selected */
  width: 100%; // Ensure the div takes up the container size
  height: 100%;
  display: flex; // Changed from block to flex
  align-items: center; // Added to vertically center content
  justify-content: center; // Added to horizontally center content

  // Style the embedded SVG directly
  svg {
    width: 100%;
    height: 100%;
    display: block; // Ensure SVG scales correctly
    fill: currentColor; // Use the color set by the style attribute
    stroke: black; // Add a black outline like the text-shadow did
    stroke-width: 1px; // Adjust stroke width as needed
    // Consider adding a drop-shadow filter for better visibility if needed
    filter: drop-shadow(0 0 1px black);
  }

  // Style the Material Icon for helicopters
  .spinning-copter-icon {
    font-size: 3rem; // Adjust size as needed
    width: 3rem;
    height: 3rem;
    display: inline-block;
    animation: spin 2s linear infinite reverse;
    color: currentColor; // Inherit color from parent .plane-marker
    text-shadow: 0 0 2px black; // Add outline similar to SVG
    filter: drop-shadow(0 0 1px black);
  }

  &.grounded-plane {
    color: #ededed;
    // margin-right: 2rem; // Remove margin-right

    // Adjust SVG size for grounded planes to fit 2rem container
    svg {
      width: 100%; // Use full container size
      height: 100%;
      // margin: auto; // No longer needed if width/height are 100%
    }

    // Adjust icon size for grounded copters to fit 2rem container
    .spinning-copter-icon {
      font-size: 2rem; // Match container size
      width: 2rem;
      height: 2rem;
    }
  }

  &.new-plane {
    color: $new-plane-color;
  }

  &.followed-plane {
    color: $followed-plane-color;
    filter: drop-shadow(0 0 6px rgba(255, 255, 255, 0.3));
    // Apply stroke to SVG for followed planes if desired
    svg {
      stroke: $followed-plane-color; // Match the color
      stroke-width: 1.5px;
    }
  }

  &:hover {
    z-index: 1000 !important;
  }
}

// Define the spinning animation
@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

// Add styling for historical trail segments
.history-trail-segment {
  stroke-linecap: round;
  stroke-linejoin: round;
}

.predicted-path-line {
  border-style: dashed;
}
